//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FolderSynchMUIClient.FolderSynchService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FolderSynchService.FolderSynchServiceContract", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface FolderSynchServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FolderSynchServiceContract/RegisterNewUser", ReplyAction="http://tempuri.org/FolderSynchServiceContract/RegisterNewUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServicesProject.RegistrationFault), Action="http://tempuri.org/FolderSynchServiceContract/RegisterNewUserRegistrationFaultFau" +
            "lt", Name="RegistrationFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesProject")]
        ServicesProject.User RegisterNewUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FolderSynchServiceContract/RegisterNewUser", ReplyAction="http://tempuri.org/FolderSynchServiceContract/RegisterNewUserResponse")]
        System.Threading.Tasks.Task<ServicesProject.User> RegisterNewUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FolderSynchServiceContract/loginUser", ReplyAction="http://tempuri.org/FolderSynchServiceContract/loginUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServicesProject.LoginFault), Action="http://tempuri.org/FolderSynchServiceContract/loginUserLoginFaultFault", Name="LoginFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesProject")]
        ServicesProject.User loginUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FolderSynchServiceContract/loginUser", ReplyAction="http://tempuri.org/FolderSynchServiceContract/loginUserResponse")]
        System.Threading.Tasks.Task<ServicesProject.User> loginUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/FolderSynchServiceContract/logoutUser", ReplyAction="http://tempuri.org/FolderSynchServiceContract/logoutUserResponse")]
        void logoutUser(ServicesProject.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/FolderSynchServiceContract/logoutUser", ReplyAction="http://tempuri.org/FolderSynchServiceContract/logoutUserResponse")]
        System.Threading.Tasks.Task logoutUserAsync(ServicesProject.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/FolderSynchServiceContract/addNewSynchronizedFolder", ReplyAction="http://tempuri.org/FolderSynchServiceContract/addNewSynchronizedFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServicesProject.MyBaseFault), Action="http://tempuri.org/FolderSynchServiceContract/addNewSynchronizedFolderMyBaseFault" +
            "Fault", Name="MyBaseFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesProject")]
        void addNewSynchronizedFolder(string folderName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/FolderSynchServiceContract/addNewSynchronizedFolder", ReplyAction="http://tempuri.org/FolderSynchServiceContract/addNewSynchronizedFolderResponse")]
        System.Threading.Tasks.Task addNewSynchronizedFolderAsync(string folderName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/FolderSynchServiceContract/uploadFile", ReplyAction="http://tempuri.org/FolderSynchServiceContract/uploadFileResponse")]
        void uploadFile(string baseFolder, string localPath, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/FolderSynchServiceContract/uploadFile", ReplyAction="http://tempuri.org/FolderSynchServiceContract/uploadFileResponse")]
        System.Threading.Tasks.Task uploadFileAsync(string baseFolder, string localPath, byte[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FolderSynchServiceContractChannel : FolderSynchMUIClient.FolderSynchService.FolderSynchServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FolderSynchServiceContractClient : System.ServiceModel.ClientBase<FolderSynchMUIClient.FolderSynchService.FolderSynchServiceContract>, FolderSynchMUIClient.FolderSynchService.FolderSynchServiceContract {
        
        public FolderSynchServiceContractClient() {
        }
        
        public FolderSynchServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FolderSynchServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderSynchServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderSynchServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServicesProject.User RegisterNewUser(string username, string password) {
            return base.Channel.RegisterNewUser(username, password);
        }
        
        public System.Threading.Tasks.Task<ServicesProject.User> RegisterNewUserAsync(string username, string password) {
            return base.Channel.RegisterNewUserAsync(username, password);
        }
        
        public ServicesProject.User loginUser(string username, string password) {
            return base.Channel.loginUser(username, password);
        }
        
        public System.Threading.Tasks.Task<ServicesProject.User> loginUserAsync(string username, string password) {
            return base.Channel.loginUserAsync(username, password);
        }
        
        public void logoutUser(ServicesProject.User user) {
            base.Channel.logoutUser(user);
        }
        
        public System.Threading.Tasks.Task logoutUserAsync(ServicesProject.User user) {
            return base.Channel.logoutUserAsync(user);
        }
        
        public void addNewSynchronizedFolder(string folderName) {
            base.Channel.addNewSynchronizedFolder(folderName);
        }
        
        public System.Threading.Tasks.Task addNewSynchronizedFolderAsync(string folderName) {
            return base.Channel.addNewSynchronizedFolderAsync(folderName);
        }
        
        public void uploadFile(string baseFolder, string localPath, byte[] data) {
            base.Channel.uploadFile(baseFolder, localPath, data);
        }
        
        public System.Threading.Tasks.Task uploadFileAsync(string baseFolder, string localPath, byte[] data) {
            return base.Channel.uploadFileAsync(baseFolder, localPath, data);
        }
    }
}
