//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FolderSynchWPFClient.FolderSynchService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FolderSynchService.IFolderSynchService")]
    public interface IFolderSynchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderSynchService/DoWork", ReplyAction="http://tempuri.org/IFolderSynchService/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderSynchService/DoWork", ReplyAction="http://tempuri.org/IFolderSynchService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderSynchService/DoWork2", ReplyAction="http://tempuri.org/IFolderSynchService/DoWork2Response")]
        int DoWork2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderSynchService/DoWork2", ReplyAction="http://tempuri.org/IFolderSynchService/DoWork2Response")]
        System.Threading.Tasks.Task<int> DoWork2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderSynchService/DoWork3", ReplyAction="http://tempuri.org/IFolderSynchService/DoWork3Response")]
        bool DoWork3();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderSynchService/DoWork3", ReplyAction="http://tempuri.org/IFolderSynchService/DoWork3Response")]
        System.Threading.Tasks.Task<bool> DoWork3Async();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFolderSynchServiceChannel : FolderSynchWPFClient.FolderSynchService.IFolderSynchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FolderSynchServiceClient : System.ServiceModel.ClientBase<FolderSynchWPFClient.FolderSynchService.IFolderSynchService>, FolderSynchWPFClient.FolderSynchService.IFolderSynchService {
        
        public FolderSynchServiceClient() {
        }
        
        public FolderSynchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FolderSynchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderSynchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderSynchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public int DoWork2() {
            return base.Channel.DoWork2();
        }
        
        public System.Threading.Tasks.Task<int> DoWork2Async() {
            return base.Channel.DoWork2Async();
        }
        
        public bool DoWork3() {
            return base.Channel.DoWork3();
        }
        
        public System.Threading.Tasks.Task<bool> DoWork3Async() {
            return base.Channel.DoWork3Async();
        }
    }
}
